// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id      Int       @id @default(autoincrement())
  username     String
  password     String
  email        String
  date_created DateTime
  last_login   DateTime?
  user_type    UserType
  Profile      Profile?
  Review       Review?
  Service      Service?
  Contact      Contact?
}

model Provider {
  provider_id  Int       @id @default(autoincrement())
  username     String
  password     String
  email        String
  date_created DateTime
  last_login   DateTime?
  user_type    UserType
  profile      Profile?  @relation(fields: [profile_id], references: [profile_id])
  profile_id   Int?
  Contact      Contact?
}

enum UserType {
  user
  service_provider
}

model Profile {
  profile_id          Int        @id @default(autoincrement())
  user_id             Int        @unique
  first_name          String
  last_name           String
  phone_number        String
  address             String
  city                String
  county              String
  Eircode             String
  profile_picture_url String?
  bio                 String?
  user                User       @relation(fields: [user_id], references: [user_id])
  Provider            Provider[]
}

model Service {
  service_id   Int      @id @default(autoincrement())
  provider_id  Int      @unique
  service_type String   @unique @map("service_type")
  description  String   @map("description")
  pricing      Float    @map("pricing")
  availability String   @map("availability")
  date_created DateTime @map("date_created")
  provider     User     @relation(fields: [provider_id], references: [user_id])
  Review       Review?
}

model Contact {
  contact_id  Int      @id @unique
  user_id     Int      @unique
  provider_id Int      @unique
  user        User     @relation(fields: [user_id], references: [user_id])
  provider    Provider @relation(fields: [provider_id], references: [provider_id])
}

model Review {
  review_id   Int      @id @default(autoincrement())
  service_id  Int      @unique @map("service_id")
  reviewer_id Int      @unique @map("reviewer_id")
  rating      Float
  comment     String?
  date_posted DateTime
  service     Service  @relation(fields: [service_id], references: [service_id])
  reviewer    User     @relation(fields: [reviewer_id], references: [user_id])
}

model ServiceType {
  type_id     Int     @id @default(autoincrement())
  type_name   String
  description String?
}
